{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Code/HiveTech/frontend/src/pages/MovieDetail.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport \"./MovieDetails.css\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { getAllMovies } from \"../redux/movies/movieSlice\";\nimport { useParams } from \"react-router-dom\";\nimport Movie from \"../components/Movie\";\nimport { useFilms } from \"../hooks/useFilm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: \"https://swapi.dev/api/\"\n});\nconst MovieDetail = () => {\n  _s();\n  const id = useParams();\n  const result = useSelector(getAllMovies);\n  const [data, setData] = useState();\n  const {\n    characters\n  } = useFilms(data); // this one\n  const [isLoading, setIsLoading] = useState(true);\n  const links = result.map(response => {\n    return response.characters;\n  });\n  const getCharacterData = useCallback(async () => {\n    try {\n      const response = await api.get(`/films/${id.moviesId}`);\n      setData(response.data);\n    } catch {} finally {\n      setIsLoading(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    getCharacterData();\n  }, [getCharacterData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: result.map((movie, idx) => {\n      return id.moviesId == movie.episode_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Movie, {\n          poster: movie.img,\n          title: movie.title,\n          crawl: movie.opening_crawl,\n          date: movie.release_date,\n          producer: movie.producer,\n          director: movie.director,\n          characters: movie.characters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: 20\n          },\n          children: \"Featured Characters: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), characters.map((character, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"movie__characters\",\n            children: character.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetail, \"wIlUJ+grYJOk9bnsHFXIidnKhx8=\", false, function () {\n  return [useParams, useSelector, useFilms];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["useState","useEffect","useCallback","axios","useSelector","getAllMovies","useParams","Movie","useFilms","api","create","baseURL","MovieDetail","id","result","data","setData","characters","isLoading","setIsLoading","links","map","response","getCharacterData","get","moviesId","movie","idx","episode_id","img","title","opening_crawl","release_date","producer","director","fontSize","character","name"],"sources":["/Users/user/Desktop/Code/HiveTech/frontend/src/pages/MovieDetail.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport \"./MovieDetails.css\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { getAllMovies } from \"../redux/movies/movieSlice\";\nimport { useParams } from \"react-router-dom\";\nimport Movie from \"../components/Movie\";\nimport { useFilms } from \"../hooks/useFilm\";\n\ninterface Film {\n  characters: string[];\n}\nconst api = axios.create({\n  baseURL: \"https://swapi.dev/api/\",\n});\n\nconst MovieDetail = () => {\n  const id = useParams();\n  const result = useSelector(getAllMovies);\n  const [data, setData] = useState<Film>();\n  const { characters } = useFilms(data); // this one\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const links = result.map((response: any) => {\n    return response.characters;\n  });\n\n  const getCharacterData = useCallback(async () => {\n    try {\n      const response = await api.get(`/films/${id.moviesId}`);\n      setData(response.data);\n    } catch {\n    } finally {\n      setIsLoading(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    getCharacterData();\n  }, [getCharacterData]);\n\n  return (\n    <div>\n      {result.map((movie: any, idx: any) => {\n        return id.moviesId == movie.episode_id ? (\n          <div key={idx}>\n            <Movie\n              poster={movie.img}\n              title={movie.title}\n              crawl={movie.opening_crawl}\n              date={movie.release_date}\n              producer={movie.producer}\n              director={movie.director}\n              characters={movie.characters}\n            />\n            <h1 style={{ fontSize: 20 }}>Featured Characters: </h1>\n            {characters.map((character, idx: any) => (\n              <div key={idx}>\n                <h2 className=\"movie__characters\" key={idx}>\n                  {character.name}\n                </h2>\n              </div>\n            ))}\n          </div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport default MovieDetail;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAK5C,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,EAAE,GAAGP,SAAS,EAAE;EACtB,MAAMQ,MAAM,GAAGV,WAAW,CAACC,YAAY,CAAC;EACxC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,EAAQ;EACxC,MAAM;IAAEiB;EAAW,CAAC,GAAGT,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;EACvC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAU,IAAI,CAAC;EAEzD,MAAMoB,KAAK,GAAGN,MAAM,CAACO,GAAG,CAAEC,QAAa,IAAK;IAC1C,OAAOA,QAAQ,CAACL,UAAU;EAC5B,CAAC,CAAC;EAEF,MAAMM,gBAAgB,GAAGrB,WAAW,CAAC,YAAY;IAC/C,IAAI;MACF,MAAMoB,QAAQ,GAAG,MAAMb,GAAG,CAACe,GAAG,CAAE,UAASX,EAAE,CAACY,QAAS,EAAC,CAAC;MACvDT,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;IACxB,CAAC,CAAC,MAAM,CACR,CAAC,SAAS;MACRI,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAERZ,SAAS,CAAC,MAAM;IACdsB,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,oBACE;IAAA,UACGT,MAAM,CAACO,GAAG,CAAC,CAACK,KAAU,EAAEC,GAAQ,KAAK;MACpC,OAAOd,EAAE,CAACY,QAAQ,IAAIC,KAAK,CAACE,UAAU,gBACpC;QAAA,wBACE,QAAC,KAAK;UACJ,MAAM,EAAEF,KAAK,CAACG,GAAI;UAClB,KAAK,EAAEH,KAAK,CAACI,KAAM;UACnB,KAAK,EAAEJ,KAAK,CAACK,aAAc;UAC3B,IAAI,EAAEL,KAAK,CAACM,YAAa;UACzB,QAAQ,EAAEN,KAAK,CAACO,QAAS;UACzB,QAAQ,EAAEP,KAAK,CAACQ,QAAS;UACzB,UAAU,EAAER,KAAK,CAACT;QAAW;UAAA;UAAA;UAAA;QAAA,QAC7B,eACF;UAAI,KAAK,EAAE;YAAEkB,QAAQ,EAAE;UAAG,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA2B,EACtDlB,UAAU,CAACI,GAAG,CAAC,CAACe,SAAS,EAAET,GAAQ,kBAClC;UAAA,uBACE;YAAI,SAAS,EAAC,mBAAmB;YAAA,UAC9BS,SAAS,CAACC;UAAI,GADsBV,GAAG;YAAA;YAAA;YAAA;UAAA;QAErC,GAHGA,GAAG;UAAA;UAAA;UAAA;QAAA,QAKd,CAAC;MAAA,GAjBMA,GAAG;QAAA;QAAA;QAAA;MAAA,QAkBP,GACJ,IAAI;IACV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GApDIf,WAAW;EAAA,QACJN,SAAS,EACLF,WAAW,EAEHI,QAAQ;AAAA;AAAA,KAJ3BI,WAAW;AAsDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}